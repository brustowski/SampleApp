// Generated Time: 02/20/2020 20:07:12
// Generated By: IAPetrov

namespace FilingPortal.Parts.Isf.DataLayer.Migrations
{
    using FilingPortal.Parts.Common.DataLayer.Base;

    public partial class init : FpMigration
    {
        public override void Up()
        {
            CreateTable(
                "isf.filing_header",
                c => new
                {
                    id = c.Int(nullable: false, identity: true),
                    mapping_status = c.Byte(),
                    filing_status = c.Byte(),
                    created_date = c.DateTime(nullable: false),
                    created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                    filing_number = c.String(maxLength: 255, unicode: false),
                    job_link = c.String(maxLength: 128, unicode: false),
                })
                .PrimaryKey(t => t.id);

            CreateTable(
                "isf.documents",
                c => new
                {
                    id = c.Int(nullable: false, identity: true),
                    content = c.Binary(),
                    created_date = c.DateTime(nullable: false),
                    created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                    document_type = c.String(maxLength: 128, unicode: false),
                    description = c.String(maxLength: 1000, unicode: false),
                    extension = c.String(nullable: false, maxLength: 128, unicode: false),
                    file_name = c.String(nullable: false, maxLength: 255, unicode: false),
                    filing_header_id = c.Int(nullable: false),
                    inbound_record_id = c.Int(),
                })
                .PrimaryKey(t => t.id)
                .ForeignKey("isf.filing_header", t => t.filing_header_id, cascadeDelete: true)
                .Index(t => t.filing_header_id);

            CreateTable(
                "isf.inbound",
                c => new
                {
                    id = c.Int(nullable: false, identity: true),
                    importer_id = c.Guid(nullable: false),
                    importer_address_id = c.Guid(nullable: false),
                    buyer_id = c.Guid(),
                    buyer_address_id = c.Guid(),
                    consignee_id = c.Guid(),
                    consignee_address_id = c.Guid(),
                    mbl = c.String(maxLength: 128, unicode: false),
                    hbl = c.String(maxLength: 128, unicode: false),
                    mbl_scac_code = c.String(maxLength: 128, unicode: false),
                    eta = c.DateTime(),
                    etd = c.DateTime(),
                    seller_id = c.Guid(),
                    seller_address_id = c.Guid(),
                    ship_to_id = c.Guid(),
                    ship_to_address_id = c.Guid(),
                    container_stuffing_location_id = c.Guid(),
                    container_stuffing_location_address_id = c.Guid(),
                    consolidator_id = c.Guid(),
                    consolidator_address_id = c.Guid(),
                    owner_ref = c.String(maxLength: 128, unicode: false),
                    bond_holder = c.String(maxLength: 20, unicode: false),
                    created_date = c.DateTime(nullable: false),
                    created_user = c.String(maxLength: 128, unicode: false),
                    deleted = c.Boolean(nullable: false),
                })
                .PrimaryKey(t => t.id)
                .ForeignKey("dbo.Clients", t => t.buyer_id)
                .ForeignKey("dbo.Client_Addresses", t => t.buyer_address_id)
                .ForeignKey("dbo.Clients", t => t.consignee_id)
                .ForeignKey("dbo.Client_Addresses", t => t.consignee_address_id)
                .ForeignKey("dbo.Clients", t => t.consolidator_id)
                .ForeignKey("dbo.Client_Addresses", t => t.consolidator_address_id)
                .ForeignKey("dbo.Clients", t => t.container_stuffing_location_id)
                .ForeignKey("dbo.Client_Addresses", t => t.container_stuffing_location_address_id)
                .ForeignKey("dbo.Clients", t => t.importer_id)
                .ForeignKey("dbo.Client_Addresses", t => t.importer_address_id)
                .ForeignKey("dbo.Clients", t => t.seller_id)
                .ForeignKey("dbo.Client_Addresses", t => t.seller_address_id)
                .ForeignKey("dbo.Clients", t => t.ship_to_id)
                .ForeignKey("dbo.Client_Addresses", t => t.ship_to_address_id)
                .Index(t => t.importer_id)
                .Index(t => t.importer_address_id)
                .Index(t => t.buyer_id)
                .Index(t => t.buyer_address_id)
                .Index(t => t.consignee_id)
                .Index(t => t.consignee_address_id)
                .Index(t => t.seller_id)
                .Index(t => t.seller_address_id)
                .Index(t => t.ship_to_id)
                .Index(t => t.ship_to_address_id)
                .Index(t => t.container_stuffing_location_id)
                .Index(t => t.container_stuffing_location_address_id)
                .Index(t => t.consolidator_id)
                .Index(t => t.consolidator_address_id);

            CreateTable(
                "isf.inbound_manufacturers",
                c => new
                {
                    id = c.Int(nullable: false, identity: true),
                    inbound_record_id = c.Int(nullable: false),
                    manufacturer_id = c.Guid(nullable: false),
                    item_number = c.String(maxLength: 128, unicode: false),
                    country_of_origin = c.String(maxLength: 2, unicode: false),
                    hts_numbers = c.String(maxLength: 128, unicode: false),
                    created_date = c.DateTime(nullable: false),
                    created_user = c.String(maxLength: 128, unicode: false),
                })
                .PrimaryKey(t => t.id)
                .ForeignKey("isf.inbound", t => t.inbound_record_id, cascadeDelete: true)
                .ForeignKey("dbo.Clients", t => t.manufacturer_id)
                .Index(t => t.inbound_record_id)
                .Index(t => t.manufacturer_id);



            CreateTable(
                "isf.form_section_configuration",
                c => new
                {
                    id = c.Int(nullable: false, identity: true),
                    name = c.String(nullable: false, maxLength: 128, unicode: false),
                    title = c.String(nullable: false, maxLength: 128, unicode: false),
                    table_name = c.String(maxLength: 128, unicode: false),
                    procedure_name = c.String(maxLength: 128, unicode: false),
                    is_array = c.Boolean(nullable: false),
                    is_hidden = c.Boolean(nullable: false),
                    parent_id = c.Int(),
                })
                .PrimaryKey(t => t.id)
                .ForeignKey("isf.form_section_configuration", t => t.parent_id)
                .Index(t => t.name, unique: true)
                .Index(t => t.parent_id);

            CreateTable(
                "isf.form_configuration",
                c => new
                {
                    id = c.Int(nullable: false, identity: true),
                    section_id = c.Int(nullable: false),
                    has_default_value = c.Boolean(nullable: false),
                    editable = c.Boolean(nullable: false),
                    mandatory = c.Boolean(nullable: false),
                    column_name = c.String(nullable: false, maxLength: 128, unicode: false),
                    created_date = c.DateTime(nullable: false),
                    created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                    value = c.String(maxLength: 512, unicode: false),
                    display_on_ui = c.Byte(nullable: false),
                    manual = c.Byte(nullable: false),
                    single_filing_order = c.Byte(),
                    description = c.String(maxLength: 128, unicode: false),
                    label = c.String(nullable: false, maxLength: 128, unicode: false),
                    paired_field_table = c.String(maxLength: 128, unicode: false),
                    paired_field_column = c.String(maxLength: 128, unicode: false),
                    handbook_name = c.String(maxLength: 128, unicode: false),
                })
                .PrimaryKey(t => t.id)
                .ForeignKey("isf.form_section_configuration", t => t.section_id)
                .Index(t => t.section_id);



            CreateTable(
                "isf.filing_detail",
                c => new
                {
                    filing_header_id = c.Int(nullable: false),
                    inbound_id = c.Int(nullable: false),
                })
                .PrimaryKey(t => new { t.filing_header_id, t.inbound_id })
                .ForeignKey("isf.filing_header", t => t.filing_header_id, cascadeDelete: true)
                .ForeignKey("isf.inbound", t => t.inbound_id, cascadeDelete: true)
                .Index(t => t.filing_header_id)
                .Index(t => t.inbound_id);

            ExecuteSqlFileUp();
        }

        public override void Down()
        {
            DropForeignKey("isf.form_section_configuration", "parent_id", "isf.form_section_configuration");
            DropForeignKey("isf.form_configuration", "section_id", "isf.form_section_configuration");
            DropForeignKey("isf.filing_detail", "inbound_id", "isf.inbound");
            DropForeignKey("isf.filing_detail", "filing_header_id", "isf.filing_header");
            DropForeignKey("isf.inbound", "ship_to_address_id", "dbo.Client_Addresses");
            DropForeignKey("isf.inbound", "ship_to_id", "dbo.Clients");
            DropForeignKey("isf.inbound", "seller_address_id", "dbo.Client_Addresses");
            DropForeignKey("isf.inbound", "seller_id", "dbo.Clients");
            DropForeignKey("isf.inbound_manufacturers", "manufacturer_id", "dbo.Clients");
            DropForeignKey("isf.inbound_manufacturers", "inbound_record_id", "isf.inbound");
            DropForeignKey("isf.inbound", "importer_address_id", "dbo.Client_Addresses");
            DropForeignKey("isf.inbound", "importer_id", "dbo.Clients");
            DropForeignKey("isf.inbound", "container_stuffing_location_address_id", "dbo.Client_Addresses");
            DropForeignKey("isf.inbound", "container_stuffing_location_id", "dbo.Clients");
            DropForeignKey("isf.inbound", "consolidator_address_id", "dbo.Client_Addresses");
            DropForeignKey("isf.inbound", "consolidator_id", "dbo.Clients");
            DropForeignKey("isf.inbound", "consignee_address_id", "dbo.Client_Addresses");
            DropForeignKey("isf.inbound", "consignee_id", "dbo.Clients");
            DropForeignKey("isf.inbound", "buyer_address_id", "dbo.Client_Addresses");
            DropForeignKey("isf.inbound", "buyer_id", "dbo.Clients");
            DropForeignKey("isf.documents", "filing_header_id", "isf.filing_header");
            DropIndex("isf.filing_detail", new[] { "inbound_id" });
            DropIndex("isf.filing_detail", new[] { "filing_header_id" });
            DropIndex("isf.form_configuration", new[] { "section_id" });
            DropIndex("isf.form_section_configuration", new[] { "parent_id" });
            DropIndex("isf.form_section_configuration", new[] { "name" });
            DropIndex("isf.inbound_manufacturers", new[] { "manufacturer_id" });
            DropIndex("isf.inbound_manufacturers", new[] { "inbound_record_id" });
            DropIndex("isf.inbound", new[] { "consolidator_address_id" });
            DropIndex("isf.inbound", new[] { "consolidator_id" });
            DropIndex("isf.inbound", new[] { "container_stuffing_location_address_id" });
            DropIndex("isf.inbound", new[] { "container_stuffing_location_id" });
            DropIndex("isf.inbound", new[] { "ship_to_address_id" });
            DropIndex("isf.inbound", new[] { "ship_to_id" });
            DropIndex("isf.inbound", new[] { "seller_address_id" });
            DropIndex("isf.inbound", new[] { "seller_id" });
            DropIndex("isf.inbound", new[] { "consignee_address_id" });
            DropIndex("isf.inbound", new[] { "consignee_id" });
            DropIndex("isf.inbound", new[] { "buyer_address_id" });
            DropIndex("isf.inbound", new[] { "buyer_id" });
            DropIndex("isf.inbound", new[] { "importer_address_id" });
            DropIndex("isf.inbound", new[] { "importer_id" });
            DropIndex("isf.documents", new[] { "filing_header_id" });
            DropTable("isf.filing_detail");
            DropTable("isf.form_configuration");
            DropTable("isf.form_section_configuration");
            DropTable("isf.inbound_manufacturers");
            DropTable("isf.inbound");
            DropTable("isf.documents");
            DropTable("isf.filing_header");

            ExecuteSqlFileDown();
        }
    }
}

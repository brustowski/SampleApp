// Generated Time: 11/21/2019 16:30:53
// Generated By: IAPetrov

using FilingPortal.Parts.Common.DataLayer.Base;

namespace FilingPortal.DataLayer.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class cbdev_2786_rail_daily_audit : FpMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.imp_rail_audit_daily_rules",
                c => new
                    {
                        id = c.Int(nullable: false, identity: true),
                        importer_code = c.String(maxLength: 24, unicode: false),
                        supplier_code = c.String(maxLength: 24, unicode: false),
                        goods_description = c.String(maxLength: 525, unicode: false),
                        destination = c.String(maxLength: 2, unicode: false),
                        consignee_code = c.String(maxLength: 24, unicode: false),
                        owner_ref = c.String(maxLength: 35, unicode: false),
                        tariff = c.String(maxLength: 50, unicode: false),
                        filer_code = c.String(maxLength: 41, unicode: false),
                        entry_type = c.String(maxLength: 2, unicode: false),
                        summary_date = c.DateTime(storeType: "smalldatetime"),
                        port_code = c.String(maxLength: 5, unicode: false),
                        entry_date = c.DateTime(storeType: "smalldatetime"),
                        importing_carrier = c.String(maxLength: 4, unicode: false),
                        mode_of_transport = c.String(maxLength: 3, unicode: false),
                        country_of_origin = c.String(maxLength: 2, unicode: false),
                        import_date = c.DateTime(storeType: "smalldatetime"),
                        bill_of_lading = c.String(maxLength: 8000, unicode: false),
                        manufacturer_id = c.String(maxLength: 16, unicode: false),
                        exporting_country = c.String(maxLength: 2, unicode: false),
                        exporting_date = c.DateTime(storeType: "smalldatetime"),
                        us_port_of_unlading = c.String(maxLength: 5, unicode: false),
                        location_of_goods = c.String(maxLength: 100, unicode: false),
                        consignee_no = c.String(maxLength: 24, unicode: false),
                        importer_no = c.String(maxLength: 24, unicode: false),
                        ultimate_consignee_name_address = c.String(maxLength: 500, unicode: false),
                        importer_of_record_name_address = c.String(maxLength: 500, unicode: false),
                        line_number = c.Int(),
                        htsus_no = c.String(maxLength: 50, unicode: false),
                        gross_weight = c.String(maxLength: 50, unicode: false),
                        net_quantity_in_htsus_units = c.String(maxLength: 50, unicode: false),
                        custom_attrib1 = c.String(maxLength: 50, unicode: false),
                        custom_attrib2 = c.String(maxLength: 50, unicode: false),
                        customs_attrib3 = c.String(maxLength: 50, unicode: false),
                        entered_value = c.Decimal(precision: 18, scale: 6),
                        chgs = c.Decimal(precision: 18, scale: 6),
                        relationship = c.String(maxLength: 1, unicode: false),
                        spi = c.String(maxLength: 3, unicode: false),
                        value_recon = c.String(maxLength: 2, unicode: false),
                        fta_recon = c.String(maxLength: 1, unicode: false),
                        tariff_rate = c.Decimal(precision: 18, scale: 6),
                        duty_and_ir_tax = c.Decimal(precision: 18, scale: 6),
                        other_fee_summary_block39 = c.Decimal(precision: 18, scale: 6),
                        total_entered_value_from = c.Decimal(precision: 18, scale: 6),
                        total_entered_value_to = c.Decimal(precision: 18, scale: 6),
                        duty_from = c.Decimal(precision: 18, scale: 6),
                        duty_to = c.Decimal(precision: 18, scale: 6),
                        other = c.Decimal(precision: 18, scale: 6),
                        total = c.Decimal(precision: 18, scale: 6),
                        broker_importer_file_number = c.String(maxLength: 100, unicode: false),
                        containers_count = c.Int(),
                        last_modified_by = c.String(maxLength: 50, unicode: false),
                        last_modified_date = c.DateTime(nullable: false),
                        release_status = c.String(maxLength: 50, unicode: false),
                        is_single_filing = c.Boolean(nullable: false),
                        created_date = c.DateTime(nullable: false),
                        created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                    })
                .PrimaryKey(t => t.id)
                .ForeignKey("dbo.app_users", t => t.created_user, cascadeDelete: true)
                .Index(t => new { t.importer_code, t.supplier_code, t.goods_description, t.destination, t.port_code, t.importing_carrier, t.is_single_filing }, unique: true)
                .Index(t => t.created_user);
            
            CreateTable(
                "dbo.imp_rail_audit_daily",
                c => new
                    {
                        id = c.Int(nullable: false, identity: true),
                        importer_code = c.String(nullable: false, maxLength: 24, unicode: false),
                        supplier_code = c.String(nullable: false, maxLength: 24, unicode: false),
                        goods_description = c.String(nullable: false, maxLength: 525, unicode: false),
                        destination = c.String(maxLength: 2, unicode: false),
                        consignee_code = c.String(maxLength: 24, unicode: false),
                        owner_ref = c.String(maxLength: 35, unicode: false),
                        tariff = c.String(maxLength: 50, unicode: false),
                        filer_code = c.String(maxLength: 41, unicode: false),
                        entry_type = c.String(maxLength: 2, unicode: false),
                        summary_date = c.DateTime(storeType: "smalldatetime"),
                        port_code = c.String(maxLength: 5, unicode: false),
                        entry_date = c.DateTime(storeType: "smalldatetime"),
                        importing_carrier = c.String(maxLength: 4, unicode: false),
                        mode_of_transport = c.String(maxLength: 3, unicode: false),
                        country_of_origin = c.String(maxLength: 2, unicode: false),
                        import_date = c.DateTime(storeType: "smalldatetime"),
                        bill_of_lading = c.String(maxLength: 8000, unicode: false),
                        manufacturer_id = c.String(maxLength: 16, unicode: false),
                        exporting_country = c.String(maxLength: 2, unicode: false),
                        exporting_date = c.DateTime(storeType: "smalldatetime"),
                        us_port_of_unlading = c.String(maxLength: 5, unicode: false),
                        location_of_goods = c.String(maxLength: 100, unicode: false),
                        consignee_no = c.String(maxLength: 24, unicode: false),
                        importer_no = c.String(maxLength: 24, unicode: false),
                        ultimate_consignee_name_address = c.String(maxLength: 500, unicode: false),
                        importer_of_record_name_address = c.String(maxLength: 500, unicode: false),
                        line_number = c.Int(nullable: false),
                        htsus_no = c.String(maxLength: 50, unicode: false),
                        gross_weight = c.String(maxLength: 50, unicode: false),
                        net_quantity_in_htsus_units = c.String(maxLength: 50, unicode: false),
                        custom_attrib1 = c.String(maxLength: 50, unicode: false),
                        custom_attrib2 = c.String(maxLength: 50, unicode: false),
                        customs_attrib3 = c.String(maxLength: 50, unicode: false),
                        entered_value = c.Decimal(nullable: false, precision: 18, scale: 6),
                        chgs = c.Decimal(nullable: false, precision: 18, scale: 6),
                        relationship = c.String(maxLength: 1, unicode: false),
                        spi = c.String(maxLength: 3, unicode: false),
                        value_recon = c.String(maxLength: 2, unicode: false),
                        fta_recon = c.String(maxLength: 1, unicode: false),
                        tariff_rate = c.Decimal(precision: 18, scale: 6),
                        duty_and_ir_tax = c.Decimal(precision: 18, scale: 6),
                        other_fee_summary_block39 = c.Decimal(precision: 18, scale: 6),
                        total_entered_value = c.Decimal(precision: 18, scale: 6),
                        duty = c.Decimal(precision: 18, scale: 6),
                        other = c.Decimal(precision: 18, scale: 6),
                        total = c.Decimal(precision: 18, scale: 6),
                        broker_importer_file_number = c.String(maxLength: 100, unicode: false),
                        containers_count = c.Int(),
                        last_modified_by = c.String(maxLength: 50, unicode: false),
                        last_modified_date = c.DateTime(nullable: false),
                        release_status = c.String(maxLength: 50, unicode: false),
                        is_single_filing = c.Boolean(nullable: false),
                        created_date = c.DateTime(nullable: false),
                        created_user = c.String(maxLength: 128, unicode: false),
                    })
                .PrimaryKey(t => t.id);

            ExecuteSqlFileUp();

        }
        
        public override void Down()
        {
            DropForeignKey("dbo.imp_rail_audit_daily_rules", "created_user", "dbo.app_users");
            DropIndex("dbo.imp_rail_audit_daily_rules", new[] { "created_user" });
            DropIndex("dbo.imp_rail_audit_daily_rules", new[] { "importer_code", "supplier_code", "goods_description", "destination", "port_code", "importing_carrier", "is_single_filing" });
            DropTable("dbo.imp_rail_audit_daily");
            DropTable("dbo.imp_rail_audit_daily_rules");

            ExecuteSqlFileDown();
        }
    }
}

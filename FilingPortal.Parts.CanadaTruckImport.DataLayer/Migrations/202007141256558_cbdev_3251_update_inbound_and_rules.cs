// Generated Time: 07/14/2020 15:56:55
// Generated By: aikravchenko

using System;

namespace FilingPortal.Parts.CanadaTruckImport.DataLayer.Migrations
{
    using FilingPortal.Parts.Common.DataLayer.Base;

    public partial class cbdev_3251_update_inbound_and_rules : FpMigration
    {
        public override void Up()
        {
            CreateTable(
                    "canada_imp_truck.rule_product",
                    c => new
                    {
                        id = c.Int(nullable: false, identity: true),
                        product_code_id = c.Guid(nullable: false),
                        gross_weight_unit = c.String(nullable: false, maxLength: 3, unicode: false),
                        packages_unit = c.String(nullable: false, maxLength: 3, unicode: false),
                        invoice_uq = c.String(nullable: false, maxLength: 3, unicode: false),
                        created_date = c.DateTime(nullable: false),
                        created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                    })
                .PrimaryKey(t => t.id)
                .ForeignKey("canada_imp_truck.handbook_product_code", t => t.product_code_id)
                .Index(t => t.product_code_id, unique: true);

            CreateTable(
                    "canada_imp_truck.rule_vendor",
                    c => new
                    {
                        id = c.Int(nullable: false, identity: true),
                        vendor_id = c.Guid(nullable: false),
                        importer_id = c.Guid(nullable: false),
                        exporter_id = c.Guid(nullable: false),
                        export_state = c.String(maxLength: 2, unicode: false),
                        direct_ship_place = c.String(maxLength: 128, unicode: false),
                        no_packages = c.Int(),
                        country_of_origin = c.String(maxLength: 2, unicode: false),
                        org_state = c.String(maxLength: 128, unicode: false),
                        created_date = c.DateTime(nullable: false),
                        created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                    })
                .PrimaryKey(t => t.id)
                .ForeignKey("dbo.Clients", t => t.vendor_id)
                .ForeignKey("dbo.Clients", t => t.importer_id)
                .ForeignKey("dbo.Clients", t => t.exporter_id)
                .Index(t => t.vendor_id, unique: true)
                .Index(t => t.importer_id)
                .Index(t => t.exporter_id);

            AddColumn("canada_imp_truck.inbound", "vendor_id", c => c.Guid());
            AddColumn("canada_imp_truck.inbound", "consignee_id", c => c.Guid());
            AddColumn("canada_imp_truck.inbound", "gross_weight", c => c.Decimal(precision: 18, scale: 6));
            AddColumn("canada_imp_truck.inbound", "product_code_id", c => c.Guid());
            AddColumn("canada_imp_truck.inbound", "invoice_qty", c => c.Decimal(precision: 18, scale: 6));


            ExecuteSqlFileUp();


            AlterColumn("canada_imp_truck.inbound", "vendor_id", c => c.Guid(nullable: false));
            AlterColumn("canada_imp_truck.inbound", "consignee_id", c => c.Guid(nullable: false));
            AlterColumn("canada_imp_truck.inbound", "gross_weight", c => c.Decimal(nullable: false, precision: 18, scale: 6));
            AlterColumn("canada_imp_truck.inbound", "product_code_id", c => c.Guid(nullable: false));
            AlterColumn("canada_imp_truck.inbound", "invoice_qty", c => c.Decimal(nullable: false, precision: 18, scale: 6));
            AlterColumn("canada_imp_truck.inbound", "port", c => c.String(nullable: false, maxLength: 4, unicode: false));
            AlterColumn("canada_imp_truck.inbound", "pars_number", c => c.String(nullable: false, maxLength: 128, unicode: false));
            AlterColumn("canada_imp_truck.inbound", "eta", c => c.DateTime(nullable: false));
            AlterColumn("canada_imp_truck.inbound", "direct_ship_date", c => c.DateTime(nullable: false));
            AlterColumn("canada_imp_truck.inbound", "line_price", c => c.Decimal(nullable: false, precision: 18, scale: 6));

            CreateIndex("canada_imp_truck.inbound", "vendor_id");
            CreateIndex("canada_imp_truck.inbound", "consignee_id");
            CreateIndex("canada_imp_truck.inbound", "product_code_id");

            AddForeignKey("canada_imp_truck.inbound", "product_code_id", "canada_imp_truck.handbook_product_code", "id");
            AddForeignKey("canada_imp_truck.inbound", "vendor_id", "dbo.Clients", "id");
            AddForeignKey("canada_imp_truck.inbound", "consignee_id", "dbo.Clients", "id");

            DropForeignKey("canada_imp_truck.inbound", "importer_id", "dbo.Clients");
            DropIndex("canada_imp_truck.inbound", new[] { "importer_id" });
            DropColumn("canada_imp_truck.inbound", "importer_id");
            DropColumn("canada_imp_truck.inbound", "carrier_at_import");

            DropTable("canada_imp_truck.rule_carrier");
            DropTable("canada_imp_truck.rule_importer");
        }

        public override void Down()
        {
            CreateTable(
                "canada_imp_truck.rule_carrier",
                c => new
                {
                    id = c.Int(nullable: false, identity: true),
                    carrier = c.String(nullable: false, maxLength: 4, unicode: false),
                    gross_weight = c.Decimal(precision: 18, scale: 6),
                    gross_weight_unit = c.String(maxLength: 3, unicode: false),
                    invoice_qty = c.Decimal(precision: 18, scale: 6),
                    invoice_uq = c.String(maxLength: 3, unicode: false),
                    created_date = c.DateTime(nullable: false),
                    created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                })
                .PrimaryKey(t => t.id);

            CreateTable(
                    "canada_imp_truck.rule_importer",
                    c => new
                    {
                        id = c.Int(nullable: false, identity: true),
                        importer_id = c.Guid(nullable: false),
                        vendor_id = c.Guid(),
                        consignee_id = c.Guid(),
                        exporter_id = c.Guid(),
                        product_code_id = c.Guid(),
                        export_state = c.String(maxLength: 2, unicode: false),
                        direct_ship_place = c.String(maxLength: 128, unicode: false),
                        no_packages = c.Int(),
                        packages_unit = c.String(maxLength: 3, unicode: false),
                        country_of_origin = c.String(maxLength: 2, unicode: false),
                        org_state = c.String(maxLength: 128, unicode: false),
                        created_date = c.DateTime(nullable: false),
                        created_user = c.String(nullable: false, maxLength: 128, unicode: false),
                    })
                .PrimaryKey(t => t.id)
                .ForeignKey("dbo.Clients", t => t.consignee_id)
                .ForeignKey("dbo.Clients", t => t.exporter_id)
                .ForeignKey("dbo.Clients", t => t.importer_id)
                .ForeignKey("dbo.Clients", t => t.vendor_id)
                .ForeignKey("canada_imp_truck.handbook_product_code", t => t.product_code_id)
                .Index(t => t.importer_id)
                .Index(t => t.vendor_id)
                .Index(t => t.consignee_id)
                .Index(t => t.exporter_id)
                .Index(t => t.product_code_id);


            AddColumn("canada_imp_truck.inbound", "carrier_at_import", c => c.String(maxLength: 4, unicode: false));
            AddColumn("canada_imp_truck.inbound", "importer_id", c => c.Guid());


            ExecuteSqlFileDown();


            AlterColumn("canada_imp_truck.inbound", "line_price", c => c.Decimal(precision: 18, scale: 6));
            AlterColumn("canada_imp_truck.inbound", "direct_ship_date", c => c.DateTime());
            AlterColumn("canada_imp_truck.inbound", "eta", c => c.DateTime());
            AlterColumn("canada_imp_truck.inbound", "pars_number", c => c.String(maxLength: 128, unicode: false));
            AlterColumn("canada_imp_truck.inbound", "port", c => c.String(maxLength: 4, unicode: false));
            AlterColumn("canada_imp_truck.inbound", "importer_id", c => c.Guid(nullable: false));

            CreateIndex("canada_imp_truck.inbound", "importer_id");
            AddForeignKey("canada_imp_truck.inbound", "importer_id", "dbo.Clients", "id");

            DropForeignKey("canada_imp_truck.inbound", "product_code_id", "canada_imp_truck.handbook_product_code");
            DropForeignKey("canada_imp_truck.inbound", "vendor_id", "dbo.Clients");
            DropForeignKey("canada_imp_truck.inbound", "consignee_id", "dbo.Clients");

            DropIndex("canada_imp_truck.inbound", new[] { "product_code_id" });
            DropIndex("canada_imp_truck.inbound", new[] { "vendor_id" });
            DropIndex("canada_imp_truck.inbound", new[] { "consignee_id" });

            DropColumn("canada_imp_truck.inbound", "vendor_id");
            DropColumn("canada_imp_truck.inbound", "gross_weight");
            DropColumn("canada_imp_truck.inbound", "consignee_id");
            DropColumn("canada_imp_truck.inbound", "product_code_id");
            DropColumn("canada_imp_truck.inbound", "invoice_qty");


            DropTable("canada_imp_truck.rule_product");
            DropTable("canada_imp_truck.rule_vendor");
        }
    }
}
